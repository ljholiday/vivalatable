<?xml version="1.0" encoding="UTF-8"?>
<!--
  ENVIRONMENT CONFIGURATION
  Local development environment details for VivalaTable
-->

<environment>
  <repository>
    <path>~/Repositories/vivalatable</path>
    <url>http://localhost:8081/</url>
    <server>nginx</server>
  </repository>

  <logging>
    <error_log>~/Repositories/vivalatable/error.log</error_log>
    <note>Log file created automatically when errors occur</note>
  </logging>

  <documentation>
    <docs_folder>
      <path>docs/</path>
      <purpose>Documents pushed to repo and production</purpose>
      <git_tracked>true</git_tracked>
    </docs_folder>

    <dev_folder>
      <path>dev/</path>
      <purpose>Local development docs and standards (XML files)</purpose>
      <git_tracked>false</git_tracked>
      <in_gitignore>true</in_gitignore>
    </dev_folder>

    <external_docs>
      <path>~/Repositories/vivalatable-docs</path>
      <purpose>External reference documentation (outside main repo)</purpose>
      <git_tracked>false</git_tracked>
    </external_docs>
  </documentation>

  <reference_environment>
    <name>PartyMinder (WordPress Plugin)</name>
    <path>~/Local Sites/socialpartyminderlocal/app/public/wp-content/plugins/partyminder/</path>
    <platform>Local by Flywheel</platform>
    <purpose>Visual/layout reference ONLY</purpose>
    <warning>DO NOT use PartyMinder for logic or architecture - migration is COMPLETE</warning>
    <use_for>
      <item>UI layout patterns</item>
      <item>CSS structure reference</item>
      <item>Visual design patterns</item>
    </use_for>
    <do_not_use_for>
      <item>Implementation logic</item>
      <item>WordPress functions</item>
      <item>Architecture patterns</item>
      <item>Service implementations</item>
    </do_not_use_for>
  </reference_environment>

  <architecture>
    <framework>Standalone PHP (NO WordPress dependencies)</framework>
    <services>
      <service>vt_service('auth.service')</service>
      <service>vt_service('security.service')</service>
      <service>vt_service('validation.validator')</service>
    </services>
    <ajax>
      <success>VT_Ajax::sendSuccess($data)</success>
      <error>VT_Ajax::sendError($message)</error>
    </ajax>
    <routing>VT_Router</routing>
    <database>VT_Database::getInstance()</database>
  </architecture>

  <debugging>
    <browser_console>Primary method for frontend debugging</browser_console>
    <network_tab>Check /ajax/* requests for response data</network_tab>
    <error_log>Check error.log for PHP errors and error_log() output</error_log>
  </debugging>
</environment>